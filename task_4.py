"""
Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать
в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной
функции возведения числа в степень.

** Подсказка:** попробуйте решить задачу двумя способами.
Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""
import math  # нужен для вызова числа пи (пример действителного положительного числа)

x_y = input('Ведите x и y через пробел (x-действительное положительное число,'
            ' y-целое отрицательное число)>>> ').split()
##############################
print('Пример 1')
def my_func(x, y):
    return x ** y  # в первом примере получается: x делить на x, y раз


print(f'Число пи в -5 степени = {my_func(math.pi, - 5)}')
print(f'{x_y[0]} в степени {x_y[1]} = {my_func(float(x_y[0]), int(x_y[1]))}')

#############################
print('Пример 2')
def my_func2(x, y):
    return x ** abs(y)  # в этом и следующем примерах x в степени y


print(f'Число пи в -5 степени = {my_func2(math.pi, - 5)}')
print(f'{x_y[0]} в степени {x_y[1]} = {my_func2(float(x_y[0]), int(x_y[1]))}')

#############################
print('Пример 3')
def my_func3(x, y):
    result = 1
    for i in range(0, y, round(y / abs(y))):  # если y положительный, то шаг 1. Если y отрицательный, то шаг -1
        result *= x
    return result


print(f'Число пи в -5 степени = {my_func3(math.pi, - 5)}')
print(f'{x_y[0]} в степени {x_y[1]} = {my_func3(float(x_y[0]), int(x_y[1]))}')
